var api = {config:{}};
api.config.scrollSettings = function() {
  var a = 80, b = 100;
  navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i) && (a = 2, b = 15);
  return {scrollInertia:0, theme:"minimal-dark", mouseWheel:{enable:!0, scrollAmount:a}, keyboard:{enable:!0, scrollAmount:b, scrollType:"stepless"}};
}();
api.links = {};
api.links.typeLinkClickWithScroll = function(a) {
};
api.links.typeLinkClick = function(a) {
};
api.page = {};
api.page.scrollToEntry = function(a) {
  $(".method-block").removeClass("active");
  $("#" + a).addClass("active");
  window.setTimeout(function() {
    $("#content").css("min-height", $("#content").height());
    $("#content-wrapper").mCustomScrollbar("scrollTo", $("#" + a), {scrollInertia:700});
    $(".panel").on("hide.bs.collapse", function(a) {
      var c = $(this).parent().parent();
      c.hasClass("selected") && (a.preventDefault(), c.removeClass("selected"));
    });
  }, 200);
};
api.page.fixLinks = function() {
  $("#content a.type-link").click(api.links.typeLinkClickWithScroll);
};
api.page.fixListings = function() {
  prettyPrint();
};
api.page.highlight = function(a, b, c) {
  b = void 0 == b ? !0 : b;
  c = void 0 == c ? !0 : c;
  $(".content-container .active").removeClass("active");
  b && (b = getEntryFromUrl(location.pathname), doExpandInTree(b, a));
  c && setTimeout(function() {
    $("#content-wrapper").mCustomScrollbar("scrollTo", $("#" + a), {scrollInertia:700});
  }, 100);
  $("#" + a).parent().addClass("active");
  location.hash = a;
};
api.page.load = function(a, b, c) {
};
api.resize = {};
api.resize.stopResize_ = function(a) {
  $("body").off("mouseup", api.resize.stopResize_);
  $("body").off("mousemove", api.resize.doResize_);
};
api.resize.doResize_ = function(a) {
  250 < a.pageX && a.pageX < window.innerWidth - 300 && ($("#menu-bar").css("width", a.pageX), $("#content-wrapper").css("margin-left", a.pageX).css("width", window.innerWidth - a.pageX), $(".breadcrumb").css("left", $("#menu-bar").width()));
  return !1;
};
api.resize.startResize_ = function(a) {
  $("body").on("mouseup", api.resize.stopResize_);
  $("body").on("mousemove", api.resize.doResize_);
  return !1;
};
api.resize.init = function() {
  $("#size-controller").on("mousedown", api.resize.startResize_);
};
api.search = {};
api.search.init = function() {
};
api.utils = {};
api.utils.cleanupPath = function(a) {
  -1 != a.indexOf("http") && (a = a.substr(a.indexOf("/", a.indexOf("//") + 2)));
  -1 != a.indexOf("#") && (a = a.substr(0, a.indexOf("#")));
  return a;
};
api.utils.getEntryFromURL = function(a) {
  a = api.utils.cleanupPath(a);
  return a.match("^/[^/]+/(.*)$")[1];
};
api.breadcrumb = {};
api.breadcrumb.update = function(a) {
  a = api.utils.cleanupPath(a);
  $("ol.breadcrumb").html("");
  a = a.split(".");
  for (var b = 0;b < a.length;b++) {
    var c;
    b < a.length - 1 ? (c = a.slice(0, b + 1).join("."), c = $("<li><a href='/" + version + "/" + c + "'>" + a[b] + "</a></li>"), c.find("a").click(api.links.typeLinkClickWithScroll)) : c = $("<li class='active'>" + a[b] + "</li>");
    $("ol.breadcrumb").append(c);
  }
};
api.tree = {};
api.tree.scrollToEntry = function(a, b) {
  var c = $("#tree li[x-data-name='" + (a + (b ? "#" + b : "")) + "']");
  window.setTimeout(function() {
    $("#tree-wrapper").mCustomScrollbar("scrollTo", c.offset().top - 120, {scrollInertia:700});
  }, 200);
};
api.tree.expand_ = function(a, b) {
  $("#tree .active").removeClass("active");
  for (var c = a.split("."), e = 0;e < c.length;e++) {
    var d = c.slice(0, e + 1).join("."), d = $("#tree li[x-data-name='" + d + "']");
    d.find(">ul").show();
    d.find(">a i").removeClass("fa-chevron-right").addClass("fa-chevron-down");
    d.addClass("active");
  }
  b && (d = $("#tree li.item[x-data-name='" + a + "#" + b + "']"), d.addClass("active"));
};
api.tree.expand = function(a) {
  a = api.utils.cleanupPath(a);
  (a = a.match("^/[^/]+/(.*)$")) && api.tree.expand_(a[1]);
};
api.tree.init = function() {
  $("#tree-wrapper").mCustomScrollbar(api.config.scrollSettings);
  $("#tree li.group").each(function() {
    var a = $(this).find(">ul");
    $(this).find(">a").click(function(b) {
      if (b.ctrlKey || b.metaKey) {
        return !0;
      }
      a.toggle();
      a.is(":visible") ? $(this).find("i").addClass("fa-chevron-down").removeClass("fa-chevron-right") : $(this).find("i").addClass("fa-chevron-right").removeClass("fa-chevron-down");
      return api.page.load($(this).attr("href"));
    });
  });
  $("#tree li.item a").click(function(a) {
    return a.ctrlKey || a.metaKey ? !0 : api.page.load($(this).attr("href"));
  });
};
api.pageScrolling = {};
api.pageScrolling.isTopVisible_ = !1;
api.pageScrolling.currentVisible_ = null;
api.pageScrolling.checkTopVisible_ = function(a) {
  0 > a ? api.pageScrolling.isTopVisible_ || ($("#top-page-content").fadeIn(), api.pageScrolling.isTopVisible_ = !0) : api.pageScrolling.isTopVisible_ && ($("#top-page-content").fadeOut(), api.pageScrolling.isTopVisible_ = !1);
};
api.pageScrolling.getFirstVisible_ = function() {
  var a = Number.MAX_VALUE, b = null;
  $("div.content-block.methods h3").each(function() {
    var c = $(this), e = Math.abs(c.offset().top - 100);
    e < a && (a = e, b = c);
  });
  return b ? b.attr("id") : null;
};
api.pageScrolling.onContentScroll_ = function() {
  api.pageScrolling.checkTopVisible_(this.mcs.top);
  var a = api.pageScrolling.getFirstVisible_();
  a && a != api.pageScrolling.currentVisible_ && (api.pageScrolling.currentVisible_ = a, api.tree.expand(page, a), api.page.highlight(a, !1, !1));
};
api.pageScrolling.update = function() {
  $("#top-page-content").hide();
  api.pageScrolling.isTopVisible_ = !1;
  api.pageScrolling.currentVisible_ = null;
  $("#content-wrapper").mCustomScrollbar($.extend(api.config.scrollSettings, {callbacks:{onScroll:api.pageScrolling.onContentScroll_}}));
};
api.pageScrolling.scrollTo = function(a) {
  $("#content-wrapper").mCustomScrollbar("scrollTo", $(a));
};
api.versions = {};
api.versions.init = function() {
  $(".versionselect").on("change", function() {
    location.href = "/" + $(this).find("option:selected").val() + "/try/" + api.utils.getEntryFromUrl(location.pathname);
  });
};
api.core = {};
$(function() {
  api.versions.init();
  api.resize.init();
  api.page.fixLinks();
  api.page.fixListings();
  api.tree.init();
  api.pageScrolling.update();
  api.search.init();
  api.tree.expand(location.pathname);
  api.breadcrumb.update(api.utils.getEntryFromURL(location.pathname));
  api.tree.scrollToEntry(page, location.hash ? location.hash.substr(1) : null);
  location.hash && api.pageScrolling.scrollTo(location.hash);
});

